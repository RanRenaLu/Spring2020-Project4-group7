library(MASS)
library(dplyr)
library(tidyr)
library(ggplot2)
data <- read.csv("../data/ml-latest-small/ratings.csv")
set.seed(0)
test_idx <- sample(1:nrow(data), round(nrow(data)/5, 0))
train_idx <- setdiff(1:nrow(data), test_idx)
data_train <- data[train_idx,]
data_test <- data[test_idx,]
U <- length(unique(data$userId))
I <- length(unique(data$movieId))
source("../lib/Matrix_Factorization_A2.R")
load("../output/rmse_pmf.Rdata")
rmse <- data.frame(rbind(result_summary[,,1], result_summary[,,2]), train_test = rep(c("Train", "Test"), each = 9), par = rep(paste("f = ", f_l[,1], ", sigma_p = ", f_l[,2], ", sigma_q = ", f_l[,3]), times = 2)) %>% gather("epoch", "RMSE", -train_test, -par)
source("../lib/cross_validation_A2.R")
f_l <- cbind(f = c(5, 10, 20, 5, 10, 20, 5, 10, 20),
sigma_p = c(1, 1, 1, 0.5, 0.5, 0.5, 1.5, 1.5, 1.5),
sigma_q = c(1, 1, 1, 0.5, 0.5, 0.5, 1.5, 1.5, 1.5))
load("../output/rmse_pmf.Rdata")
rmse <- data.frame(rbind(result_summary[,,1], result_summary[,,2]), train_test = rep(c("Train", "Test"), each = 9), par = rep(paste("f = ", f_l[,1], ", sigma_p = ", f_l[,2], ", sigma_q = ", f_l[,3]), times = 2)) %>% gather("epoch", "RMSE", -train_test, -par)
rmse$epoch <- as.numeric(gsub("X", "", rmse$epoch))
rmse %>% ggplot(aes(x = epoch, y = RMSE, col = train_test)) + geom_point() + facet_grid(~par)
rep(paste("f = ", f_l[,1], ", sigma_p = ", f_l[,2], ", sigma_q = ", f_l[,3]), times = 2)
result_summary
View(f_l)
load("../output/rmse_pmf.Rdata")
rmse <- data.frame(rbind(result_summary[,,1], result_summary[,,2]), train_test = rep(c("Train", "Test"), each = 9), par = rep(paste("f = ", f_l[,1], ", sigma_p = ", f_l[,2], ", sigma_q = ", f_l[,3]), times = 2)) %>% gather("epoch", "RMSE", -train_test, -par)
rmse$epoch <- as.numeric(gsub("X", "", rmse$epoch))
rmse %>% ggplot(aes(x = epoch, y = RMSE, col = train_test)) + geom_point() + facet_grid(~par)
rmse %>% ggplot(aes(x = epoch, y = RMSE, col = train_test)) + geom_point()
rmse %>% ggplot(aes(x = epoch, y = RMSE, col = train_test)) + geom_point() + facet_grid(~par)
load("../output/rmse_pmf.Rdata")
rmse <- data.frame(rbind(result_summary[,,1], result_summary[,,2]), train_test = rep(c("Train", "Test"), each = 9), par = rep(paste("f = ", f_l[,1], ", sigma_p = ", f_l[,2]), times = 2)) %>% gather("epoch", "RMSE", -train_test, -par)
rmse$epoch <- as.numeric(gsub("X", "", rmse$epoch))
rmse %>% ggplot(aes(x = epoch, y = RMSE, col = train_test)) + geom_point() + facet_grid(~par)
library(MASS)
library(dplyr)
library(tidyr)
library(ggplot2)
data <- read.csv("../data/ml-latest-small/ratings.csv")
set.seed(0)
test_idx <- sample(1:nrow(data), round(nrow(data)/5, 0))
train_idx <- setdiff(1:nrow(data), test_idx)
data_train <- data[train_idx,]
data_test <- data[test_idx,]
U <- length(unique(data$userId))
I <- length(unique(data$movieId))
source("../lib/Matrix_Factorization_A2.R")
source("../lib/cross_validation_A2.R")
f_l <- cbind(f = c(5, 10, 20, 5, 10, 20, 5, 10, 20),
sigma_p = c(1, 1, 1, 0.5, 0.5, 0.5, 1.5, 1.5, 1.5),
sigma_q = c(1, 1, 1, 0.5, 0.5, 0.5, 1.5, 1.5, 1.5))
load("../output/rmse_pmf.Rdata")
rmse <- data.frame(rbind(result_summary[,,1], result_summary[,,2]), train_test = rep(c("Train", "Test"), each = 9), par = rep(paste("f = ", f_l[,1], ", sigma_p = ", f_l[,2], ", sigma_q = ", f_l[,3]), times = 2)) %>% gather("epoch", "RMSE", -train_test, -par)
rmse$epoch <- as.numeric(gsub("X", "", rmse$epoch))
rmse %>% ggplot(aes(x = epoch, y = RMSE, col = train_test)) + geom_point() + facet_grid(~par)
result <- gradesc(f = 5, sigma_p = 0.5,sigma_q = 0.5,lrate = 0.01, max.iter = 100, stopping.deriv = 0.01, data = data, train = data_train, test = data_test)
result <- gradesc_pmf(f = 5, sigma_p = 0.5,sigma_q = 0.5,lrate = 0.01, max.iter = 100, stopping.deriv = 0.01, data = data, train = data_train, test = data_test)
time <- system.time(result <- gradesc_pmf(f = 5, sigma_p = 0.5,sigma_q = 0.5,lrate = 0.01, max.iter = 100, stopping.deriv = 0.01, data = data, train = data_train, test = data_test))
save(result, file = "../output/mat_fac_pmf.RData")
load(file = "../output/mat_facpmf.RData")
load(file = "../output/mat_facpmf.RData")
load(file = "../output/mat_fac_pmf.RData")
library(ggplot2)
RMSE <- data.frame(epochs = seq(10, 100, 10), Training_MSE = result$train_RMSE, Test_MSE = result$test_RMSE) %>% gather(key = train_or_test, value = RMSE, -epochs)
RMSE %>% ggplot(aes(x = epochs, y = RMSE,col = train_or_test)) + geom_point() + scale_x_discrete(limits = seq(10, 100, 10)) + xlim(c(0, 100))
